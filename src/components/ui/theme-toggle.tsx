"use client";

import { useLayoutEffect, useState } from "react";

export function ThemeToggle() {
  const [isDark, setIsDark] = useState<boolean | null>(null);

  useLayoutEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const savedTheme = localStorage.getItem("theme");
    const systemPrefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ç–µ–º—É
    const theme = savedTheme
      ? savedTheme === "dark"
      : systemPrefersDark;

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
    document.documentElement.classList.toggle("dark", theme);
    setIsDark(theme);
  }, []);

  const toggleTheme = () => {
    if (isDark === null) return;

    const newTheme = !isDark;
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é —Ç–µ–º—É
    localStorage.setItem("theme", newTheme ? "dark" : "light");
    document.documentElement.classList.toggle("dark", newTheme);
    setIsDark(newTheme);
  };

  // –†–µ–Ω–¥–µ—Ä–∏–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–º—ã
  if (isDark === null) {
    return (
      <button
        className="hover:bg-gray-100 dark:hover:bg-gray-800 opacity-0 p-2 rounded-lg cursor-default"
        aria-hidden="true"
      >
        -
      </button>
    );
  }

  return (
    <button
      onClick={toggleTheme}
      className="hover:bg-gray-100 dark:hover:bg-gray-800 p-2 rounded-lg"
      aria-label={isDark ? "Switch to light mode" : "Switch to dark mode"}
    >
      {isDark ? "üåô" : "‚òÄÔ∏è"}
    </button>
  );
}
